{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./trials/init.csv","webpack:///./src/App.vue?3d04","webpack:///src/App.vue","webpack:///./src/App.vue?d83e","webpack:///./src/App.vue","webpack:///./src/magpie.config.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","_v","pics","pic","on","$event","getPreviousResponse","$magpie","nextScreen","_l","index","_s","vocab","nextSlide","chain","socket","generation","trial_type","trial_number","expected","item","measurements","_e","saveAndNextScreen","input","$set","staticRenderFns","seen","unseen","train1a","train1b","test1","train2a","train2b","test2","train3a","train3b","final","pictures","created","getPictures","generateVocab","splitSeenUnseen","prepareRound1","prepareRound2","prepareRound3","methods","log","syllables","vocab_size","num_syllables","min_syllables","max_syllables","word","includes","sample_n","collection","results","len","filterAmbiguous","unique_vocab","indices","Array","from","el","_","indexOf","num_seen","num_train","Math","ceil","num_test","sampled_unique_vocab_indices","idx","concat","randomiseData","some_array","lastIterationResults","filteredData","items","map","datapoint","component","experimentId","serverUrl","socketUrl","completionUrl","contactEmail","config","productionTip","use","prefix","h","App","$mount"],"mappings":"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","file":"js/app.50aac2f1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-1335a3e6\":\"6bca0508\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = [{\"item\":1,\"pic\":\"images/black-circle-spiral.png\"},{\"item\":2,\"pic\":\"images/black-triangle-spiral.png\"},{\"item\":3,\"pic\":\"images/black-square-spiral.png\"},{\"item\":4,\"pic\":\"images/black-circle-wave.png\"},{\"item\":5,\"pic\":\"images/black-triangle-wave.png\"},{\"item\":6,\"pic\":\"images/black-square-wave.png\"},{\"item\":7,\"pic\":\"images/black-circle-straight.png\"},{\"item\":8,\"pic\":\"images/black-triangle-straight.png\"},{\"item\":9,\"pic\":\"images/black-square-straight.png\"},{\"item\":10,\"pic\":\"images/red-circle-spiral.png\"},{\"item\":11,\"pic\":\"images/red-triangle-spiral.png\"},{\"item\":12,\"pic\":\"images/red-square-spiral.png\"},{\"item\":13,\"pic\":\"images/red-circle-wave.png\"},{\"item\":14,\"pic\":\"images/red-triangle-wave.png\"},{\"item\":15,\"pic\":\"images/red-square-wave.png\"},{\"item\":16,\"pic\":\"images/red-circle-straight.png\"},{\"item\":17,\"pic\":\"images/red-triangle-straight.png\"},{\"item\":18,\"pic\":\"images/red-square-straight.png\"},{\"item\":19,\"pic\":\"images/blue-circle-spiral.png\"},{\"item\":20,\"pic\":\"images/blue-triangle-spiral.png\"},{\"item\":21,\"pic\":\"images/blue-square-spiral.png\"},{\"item\":22,\"pic\":\"images/blue-circle-wave.png\"},{\"item\":23,\"pic\":\"images/blue-triangle-wave.png\"},{\"item\":24,\"pic\":\"images/blue-square-wave.png\"},{\"item\":25,\"pic\":\"images/blue-circle-straight.png\"},{\"item\":26,\"pic\":\"images/blue-triangle-straight.png\"},{\"item\":27,\"pic\":\"images/blue-square-straight.png\"}]","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Experiment',{attrs:{\"title\":\"Test Experiment\"}},[_c('InstructionScreen',{attrs:{\"title\":'Welcome!'}},[_vm._v(\" Thank you very much for taking part in our experiment! Your participation is completely voluntary and you may quit at any time. \"),_c('br'),_c('br'),_vm._v(\" Personal data collected in this experiment is anonymized and will be used for research purposes only. \")]),_c('InstructionScreen',{attrs:{\"title\":'General Instructions'}},[_vm._v(\" In this experiment, you will learn a few new words of a novel language. The whole experiment consists of three rounds of vocabulary learning. A single learning round is composed of two training sessions and one testing session. \"),_c('br'),_c('br'),_vm._v(\" In training sessions, you'll first see the word you're supposed to learn, followed by a \"),_c('b',[_vm._v(\"pictorial representation\")]),_vm._v(\" of it with no additional explanations, like the image shown below: \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[18].pic}}),_c('br'),_vm._v(\" You have \"),_c('b',[_vm._v(\"5 seconds\")]),_vm._v(\" to learn each word-picture pair. When time runs out, the visual cues will disappear and you may move on to the next word when you're ready. \"),_c('br'),_c('br'),_vm._v(\" In the testing sessions, only pictures (like the one above) will be displayed on the screen. You need to recall words (or invent some when necessary) associated with those pictures and type in your answer. \"),_c('br'),_c('br'),_vm._v(\" In short, your task is to learn a few words with the aid of visual representations of their meanings (and nothing else) and then demonstrate your learning result in testing phases. \"),_c('br'),_c('br'),_vm._v(\" The experiment will take approximately \"),_c('b',[_vm._v(\"20 minutes\")]),_vm._v(\" to go through. We encourage you to work through it in one sitting with full concentration and avoid external distractions as much as possible. However, you can rest assured that you'll not be judged by your performance. Just take it easy and have fun :-) \"),_c('br'),_c('br'),_vm._v(\" If you're prepared, click the button below to begin the experiment. \")]),_c('ConnectInteractiveScreen',{attrs:{\"title\":'Connecting...'}}),_c('AwaitIteratedResultScreen',{attrs:{\"title\":'Waiting for previous participant to finish'}}),_c('Screen',{attrs:{\"title\":'Training Round 1a'}},[_vm._v(\" When you are ready, click the button to start your first training session. \"),_c('button',{on:{\"click\":function($event){_vm.getPreviousResponse();_vm.$magpie.nextScreen();}}},[_vm._v(\" Next \")])]),_vm._l((_vm.train1a),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 1a',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Training Round 1b'}},[_vm._v(\" Was that too hard? Don't worry, you'll get used to it with more training. When you are ready, click the button to start your next training session. \")]),_vm._l((_vm.train1b),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 1b',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Testing Round 1'}},[_vm._v(\" Congrats for completing the first round of training! When you are ready, click the button to start your test session. \")]),_vm._l((_vm.test1),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('TextareaInput',{attrs:{\"response\":_vm.$magpie.measurements.input},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, \"input\", $event)}}}),_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'testing 1',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}})],1)],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Training Round 2a'}},[_vm._v(\" When you are ready, click the button to start your second round of training. \")]),_vm._l((_vm.train2a),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 2a',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Training Round 2b'}},[_vm._v(\" When you are ready, click the button to start your next training session. \")]),_vm._l((_vm.train2b),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 2b',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Testing Round 2'}},[_vm._v(\" When you are ready, click the button to start your test session. \")]),_vm._l((_vm.test2),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('TextareaInput',{attrs:{\"response\":_vm.$magpie.measurements.input},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, \"input\", $event)}}}),_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'testing 2',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}})],1)],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Training Round 3a'}},[_vm._v(\" When you are ready, click the button to start your final round of training. \")]),_vm._l((_vm.train3a),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 3a',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Training Round 3b'}},[_vm._v(\" When you are ready, click the button to start your next training session. \")]),_vm._l((_vm.train3b),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('Wait',{attrs:{\"time\":1000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[_vm._v(\" \"+_vm._s(_vm.vocab[index])+\" \"),_c('br'),_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'training 3b',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}}),_c('Wait',{attrs:{\"time\":5000},on:{\"done\":function($event){return _vm.$magpie.nextSlide()}}})],1),_c('Slide',[(!_vm.$magpie.measurements.hasOwnProperty('response'))?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]):_vm._e()])],1)]}),_c('InstructionScreen',{attrs:{\"title\":'Final Testing'}},[_vm._v(\" You are almost there! When you are ready, click the button to start your final test for the language. \")]),_vm._l((_vm.final),function(index,i){return [_c('Screen',{key:i},[_c('Slide',[_c('img',{attrs:{\"src\":_vm.pics[index].pic}}),_c('TextareaInput',{attrs:{\"response\":_vm.$magpie.measurements.input},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, \"input\", $event)}}}),_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen();}}},[_vm._v(\"Next\")]),_c('Record',{attrs:{\"data\":{\n            chain: _vm.$magpie.socket.chain,\n            generation: _vm.$magpie.socket.generation,\n            trial_type: 'final',\n            trial_number: i+1,\n            expected: _vm.vocab[index],\n            item: _vm.pics[index].item,\n          }}})],1)],1)]}),_c('PostTestScreen'),_c('SubmitResultsScreen')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Experiment title=\"Test Experiment\">\n\n    <InstructionScreen :title=\"'Welcome!'\">\n    Thank you very much for taking part in our experiment! Your participation is completely voluntary and you may quit at any time.\n    <br>\n    <br>\n    Personal data collected in this experiment is anonymized and will be used for research purposes only.\n\n\n    </InstructionScreen>\n\n    <InstructionScreen :title=\"'General Instructions'\">\n      In this experiment, you will learn a few new words of a novel language. The whole experiment consists of three rounds of vocabulary learning. A single learning round is composed of two training sessions and one testing session.\n      <br>\n      <br>\n      In training sessions, you'll first see the word you're supposed to learn, followed by a <b>pictorial representation</b> of it with no additional explanations, like the image shown below:\n      <br>\n      <img :src=\"pics[18].pic\" />\n      <br>\n      You have <b>5 seconds</b> to learn each word-picture pair. When time runs out, the visual cues will disappear and you may move on to the next word when you're ready.\n      <br>\n      <br>\n      In the testing sessions, only pictures (like the one above) will be displayed on the screen. You need to recall words (or invent some when necessary) associated with those pictures and type in your answer.\n      <br>\n      <br>\n      In short, your task is to learn a few words with the aid of visual representations of their meanings (and nothing else) and then demonstrate your learning result in testing phases.\n      <br>\n      <br>\n      The experiment will take approximately <b>20 minutes</b> to go through. We encourage you to work through it in one sitting with full concentration and avoid external distractions as much as possible. However, you can rest assured that you'll not be judged by your performance. Just take it easy and have fun :-)\n      <br>\n      <br>\n      If you're prepared, click the button below to begin the experiment.\n\n    </InstructionScreen>\n\n    <ConnectInteractiveScreen :title=\"'Connecting...'\"></ConnectInteractiveScreen>\n\n    <AwaitIteratedResultScreen :title=\"'Waiting for previous participant to finish'\"></AwaitIteratedResultScreen>\n\n    <!-- Train on randomised full SEEN set -->\n    <Screen :title=\"'Training Round 1a'\">\n      When you are ready, click the button to start your first training session.\n      <!-- for debugging -->\n<!--       <p> Chain: {{$magpie.socket.chain}} </p>\n      <p> Generation: {{$magpie.socket.generation}} </p> -->\n      <button @click=\"getPreviousResponse();$magpie.nextScreen();\">\n        Next\n      </button>\n\n    </Screen>\n\n    <template v-for=\"(index, i) of train1a\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 1a',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n    <!-- Train on randomised full SEEN set -->\n    <InstructionScreen :title=\"'Training Round 1b'\">\n      Was that too hard? Don't worry, you'll get used to it with more training. When you are ready, click the button to start your next training session.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of train1b\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 1b',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n    <!-- Test on randomised halved SEEN and halved UNSEEN -->\n    <InstructionScreen :title=\"'Testing Round 1'\">\n      Congrats for completing the first round of training! When you are ready, click the button to start your test session.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of test1\">\n      <Screen :key = \"i\">\n        <Slide>\n          <img :src=\"pics[index].pic\" />\n          <TextareaInput :response.sync=\"$magpie.measurements.input\" />\n          <button @click=\"$magpie.saveAndNextScreen();\">Next</button>\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'testing 1',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n        </Slide>\n      </Screen>\n    </template>\n    <!-- Round 2: halved_seen and halved_unseen -->\n    <InstructionScreen :title=\"'Training Round 2a'\">\n      When you are ready, click the button to start your second round of training.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of train2a\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 2a',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n\n    <InstructionScreen :title=\"'Training Round 2b'\">\n      When you are ready, click the button to start your next training session.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of train2b\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 2b',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n\n    <InstructionScreen :title=\"'Testing Round 2'\">\n      When you are ready, click the button to start your test session.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of test2\">\n      <Screen :key = \"i\">\n        <Slide>\n          <img :src=\"pics[index].pic\" />\n          <TextareaInput :response.sync=\"$magpie.measurements.input\" />\n          <button @click=\"$magpie.saveAndNextScreen();\">Next</button>\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'testing 2',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n        </Slide>\n      </Screen>\n    </template>\n    <!-- Round 3: seen and unseen -->\n    <InstructionScreen :title=\"'Training Round 3a'\">\n      When you are ready, click the button to start your final round of training.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of train3a\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 3a',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n\n    <InstructionScreen :title=\"'Training Round 3b'\">\n      When you are ready, click the button to start your next training session.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of train3b\">\n      <Screen :key = \"i\">\n        <Slide> <!-- Display label for 1 second -->\n          {{vocab[index]}}\n          <Wait :time=\"1000\" @done= \"$magpie.nextSlide()\" />\n        </Slide>\n        <Slide> <!-- Display picture and label for 5 seconds -->\n          {{vocab[index]}}\n          <br/>\n          <img :src=\"pics[index].pic\" />\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'training 3b',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n          <Wait :time=\"5000\" @done= \"$magpie.nextSlide()\" />\n<!--          <Wait :time=\"5000\" @done= \"$magpie.saveAndnextScreen()\" /> -->\n        </Slide>\n        <Slide> <!-- Optional manual transition -->\n          <button\n            v-if=\"!$magpie.measurements.hasOwnProperty('response')\"\n            @click=\"$magpie.saveAndNextScreen();\">Next</button>\n        </Slide>\n      </Screen>\n    </template>\n    <InstructionScreen :title=\"'Final Testing'\">\n      You are almost there! When you are ready, click the button to start your final test for the language.\n\n    </InstructionScreen>\n\n    <template v-for=\"(index, i) of final\">\n      <Screen :key = \"i\">\n        <Slide>\n          <img :src=\"pics[index].pic\" />\n          <TextareaInput :response.sync=\"$magpie.measurements.input\" />\n          <button @click=\"$magpie.saveAndNextScreen();\">Next</button>\n          <Record :data=\"{\n            chain: $magpie.socket.chain,\n            generation: $magpie.socket.generation,\n            trial_type: 'final',\n            trial_number: i+1,\n            expected: vocab[index],\n            item: pics[index].item,\n          }\"/>\n        </Slide>\n      </Screen>\n    </template>\n\n   <PostTestScreen />\n\n    <!-- While developing your experiment, using the DebugResults screen is fine,\n      once you're going live, you can use the <SubmitResults> screen to automatically send your experimental data to the server. -->\n    <!-- <DebugResultsScreen /> -->\n    <SubmitResultsScreen />\n  </Experiment>\n</template>\n\n<script>\n// Load data from csv files as javascript arrays with objects\nimport pictures from '../trials/init.csv';\n// import _ from 'lodash'; // Import entire lodash library\nimport _random from 'lodash/random';\nimport _sample from 'lodash/sample';\nimport _shuffle from 'lodash/shuffle';\nimport _difference from 'lodash/difference';\nimport _slice from 'lodash/slice';\nimport _filter from 'lodash/filter';\nimport _uniq from 'lodash/uniq';\nimport _at from 'lodash/at';\n\nexport default {\n  name: 'App',\n  data() {\n\n    let pics = [];\n    let vocab = [];\n    let seen = [];\n    let unseen = [];\n    let train1a = [];\n    let train1b = [];\n    let test1 = [];\n    let train2a = [];\n    let train2b = [];\n    let test2 = [];\n    let train3a = [];\n    let train3b = [];\n    let final = [];\n\n    return {\n      pictures,\n      pics,\n      vocab,\n      seen,\n      unseen,\n      train1a,\n      train1b,\n      test1,\n      train2a,\n      train2b,\n      test2,\n      train3a,\n      train3b,\n      final,\n    };\n  },\n\n  created: function(){\n    this.getPictures();\n    this.generateVocab();\n    this.splitSeenUnseen();\n    this.prepareRound1();\n    this.prepareRound2();\n    this.prepareRound3();\n  },\n\n  methods: {\n\n    getPictures:\n     function(){\n      this.pics = pictures;\n     },\n\n    generateVocab:\n     function(){\n      // generate new vocab for each chain\n      console.log(syllables);\n      console.log(vocab_size);\n      for (let i = 0; i < vocab_size; i++){\n        let num_syllables = _random(min_syllables, max_syllables)\n        let word = \"\";\n        for (let j = 0; j < num_syllables; j++){\n          word += _sample(syllables);\n        }\n        if (this.vocab.includes(word)) {\n          i--; // duplicates not added to array\n          console.log(\"created duplicate word\");\n        } else {\n          this.vocab.push(word);\n        }\n      }\n\n      console.log(this.vocab);\n     },\n\n    sample_n: // samples n items from collection\n     function(n, collection){\n      let results = [];\n      let len = collection.length - 1;\n      for (let i = 0; i < n; i++){\n        let index = _random(len)\n        if (results.includes(index)) {\n          i--;\n          console.log(\"chosen same index\");\n        } else{\n          results.push(index);\n        }\n      }\n      console.log(results);\n      return results;\n     },\n\n    filterAmbiguous:\n     function(){\n      // set this.vocab to unique, get corresponding indices\n      let unique_vocab = _uniq(this.vocab)\n      console.log(unique_vocab)\n      let indices = Array.from(unique_vocab, (el, _) => this.vocab.indexOf(el))\n      console.log(this.vocab)\n      console.log(indices)\n      // reset seen and unseen\n      console.log(indices.length)\n      if (indices.length < num_seen){  // if too many ambiguous words\n        num_seen = indices.length\n        num_train = Math.ceil(num_seen / 2)\n        num_test = Math.ceil((vocab_size - num_seen) / 2)\n      }\n      let sampled_unique_vocab_indices = this.sample_n(num_seen, indices)\n      this.seen = _at(indices, sampled_unique_vocab_indices)\n      this.unseen = _shuffle(_difference(Array.from(this.pictures, (_, idx) => idx), this.seen))\n      // prepare data for each round\n      this.prepareRound1();\n      this.prepareRound2();\n      this.prepareRound3();\n     },\n\n    splitSeenUnseen:\n     function(){\n      this.seen = this.sample_n(num_seen, this.vocab)\n      let indices = Array.from(this.pictures, (_, idx) => idx)\n      this.unseen = _shuffle(_difference(indices, this.seen))\n     },\n\n    prepareRound1:\n     function(){\n      this.train1a = _shuffle(this.seen)\n      this.train1b = _shuffle(this.train1a)\n      this.test1 = _shuffle(_slice(_shuffle(this.unseen), num_test).concat(_slice(_shuffle(this.seen), num_train)))\n     },\n\n    prepareRound2:\n     function(){\n      this.train2a = _shuffle(this.seen)\n      this.train2b = _shuffle(this.train2a)\n      this.test2 = _shuffle(_slice(_shuffle(this.unseen), num_test).concat(_slice(_shuffle(this.seen), num_train)))\n     },\n\n    prepareRound3:\n     function(){\n      this.train3a = _shuffle(this.seen)\n      this.train3b = _shuffle(this.train3a)\n      this.final = this.randomiseData(pictures)\n     },\n\n    randomiseData:\n     function(some_array){\n      let indices = Array.from(some_array, (_, idx) => idx)\n      console.log(indices)\n      return _shuffle(indices)\n     },\n\n    getPreviousResponse:\n     function(){\n      let generation = this.$magpie.socket.generation;\n      console.log(generation);\n      if (generation == null){\n        return \"empty socket\";\n      }\n      if (generation != 1){\n        // retrieve data from previous iteration\n        let lastIterationResults = this.$magpie.socket.lastIterationResults;\n        console.log(lastIterationResults)\n        // only data from the final round is relevant\n        let filteredData = _filter(lastIterationResults, ['trial_type', 'final'])\n        console.log(filteredData)\n\n        // replace pics and vocab with previous results\n        let items = filteredData.map(datapoint => datapoint.item - 1)\n        this.pics = _at(this.pictures, items)\n        this.vocab = filteredData.map(datapoint => datapoint.input)\n        // filter\n        this.filterAmbiguous();\n      }\n    }\n  }\n};\n\nconst syllables = [\"ma\", \"ni\", \"so\", \"ru\", \"ka\", \"gu\", \"ti\", \"de\", \"pa\"];\nconst vocab_size = 27;\nconst min_syllables = 2;\nconst max_syllables = 4;\nlet num_seen = Math.ceil(vocab_size / 2);\nlet num_train = Math.ceil(num_seen / 2);\nlet num_test = Math.ceil((vocab_size - num_seen) / 2);\n\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=bd8e5268&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\n\texperimentId: '8',\n\tserverUrl: 'https://magpie-refactored-2.herokuapp.com/',\n\tsocketUrl: 'wss://magpie-refactored-2.herokuapp.com/socket',\n\t// this will be used in prolific mode\n\tcompletionUrl: 'https://...',\n\tcontactEmail: 'test@random.com',\n\t// Either 'debug', 'directLink' or 'prolific'\n\tmode: 'directLink'\n};\n","import Vue from 'vue';\nimport VueKonva from 'vue-konva';\nimport VueMagpie from 'magpie-base';\nimport App from './App.vue';\nimport magpieConfig from './magpie.config.js';\n\nVue.config.productionTip = false;\n\n// Load Konva components\nVue.use(VueKonva, { prefix: 'Canvas' });\n\n// Load magpie components\nVue.use(VueMagpie, magpieConfig);\n\n// start app\nnew Vue({\n  render: (h) => h(App)\n}).$mount('#app');\n"],"sourceRoot":""}